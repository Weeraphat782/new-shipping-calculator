{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jirut/shipping-calculator/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jirut/shipping-calculator/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jirut/shipping-calculator/src/components/ShippingCalculator/ReportLayout.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst ReportLayout = ({ data }) => {\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  const quoteNo = Math.random().toString(36).substr(2, 9).toUpperCase();\r\n  const date = new Date().toLocaleDateString();\r\n  const calculateFreightCost = () => data.chargeableWeight * data.appliedRate;\r\n\r\n  return (\r\n    <div className=\"w-[210mm] mx-auto bg-white p-12\">\r\n      <h1 className=\"text-2xl font-bold text-center mb-8\">\r\n        Export Shipping Cost Quote\r\n      </h1>\r\n      \r\n      <div className=\"grid grid-cols-2 gap-y-4\">\r\n        <div className=\"flex\">\r\n          <span className=\"font-bold w-36\">Company Name:</span>\r\n          <span>{data.companyInfo.companyName}</span>\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <span className=\"font-bold w-28\">Destination:</span>\r\n          <span className=\"w-32\">{data.destination}</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span className=\"font-bold w-36\">Contact Person:</span>\r\n          <span>{data.companyInfo.contactPerson}</span>\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <span className=\"font-bold w-28\">Quote No:</span>\r\n          <span className=\"w-32\">{quoteNo}</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span className=\"font-bold w-36\">Contact No:</span>\r\n          <span>{data.companyInfo.contactNo}</span>\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <span className=\"font-bold w-28\">Date:</span>\r\n          <span className=\"w-32\">{date}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"font-bold border-b border-black pb-1 mb-4\">\r\n          Dimensions\r\n        </h2>\r\n        <div className=\"flex justify-between px-4\">\r\n          <span>Length: {data.dimensions.length}cm</span>\r\n          <span>Width: {data.dimensions.width}cm</span>\r\n          <span>Height: {data.dimensions.height}cm</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"font-bold border-b border-black pb-1 mb-4\">\r\n          Weight Details\r\n        </h2>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"flex justify-between\">\r\n            <span>Volume Weight per Pallet:</span>\r\n            <span>{data.volumeWeight} kg</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>Total Volume Weight:</span>\r\n            <span>{data.totalVolumeWeight} kg</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>Actual Weight per Pallet:</span>\r\n            <span>{data.actualWeight} kg</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>Total Actual Weight:</span>\r\n            <span>{data.totalActualWeight} kg</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>Chargeable Weight:</span>\r\n            <span>{data.chargeableWeight} kg</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>Number of Pallets:</span>\r\n            <span>{data.palletCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"font-bold border-b border-black pb-1 mb-4\">\r\n          Cost Breakdown\r\n        </h2>\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between\">\r\n            <span>Freight Cost ({data.appliedRate}/kg × {data.chargeableWeight}kg):</span>\r\n            <span>฿{calculateFreightCost().toLocaleString()}</span>\r\n          </div>\r\n          {data.charges.delivery.required && data.charges.delivery.vehicle && (\r\n            <div className=\"flex justify-between\">\r\n              <span>Delivery Charge ({data.charges.delivery.vehicle === '4wheel' ? '4 Wheels' : '6 Wheels'}):</span>\r\n              <span>฿{data.charges.delivery.rates[data.charges.delivery.vehicle].toLocaleString()}</span>\r\n            </div>\r\n          )}\r\n          <div className=\"flex justify-between\">\r\n            <span>Clearance Charge (Include 7% VAT):</span>\r\n            <span>฿{data.charges.clearance.toLocaleString()}</span>\r\n          </div>\r\n          {data.charges.additionalCharges.map((charge, index) => (\r\n            <div key={index} className=\"flex justify-between\">\r\n              <span>{charge.name}:</span>\r\n              <span>฿{charge.amount.toLocaleString()}</span>\r\n            </div>\r\n          ))}\r\n          <div className=\"flex justify-between pt-2 border-t border-black font-bold\">\r\n            <span>Total Cost:</span>\r\n            <span>฿{data.totalCost.toLocaleString()}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8 pt-4 border-t border-black text-sm\">\r\n        <p>Rate validity: 30 days from quote date</p>\r\n        <p>Note: All prices are exclusive of VAT</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportLayout;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jirut/shipping-calculator/src/components/ShippingCalculator/index.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport ReportLayout from './ReportLayout';\r\n\r\ninterface Dimensions {\r\n  length: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface Rate {\r\n  minWeight: number;\r\n  maxWeight: number;\r\n  rate: number;\r\n}\r\n\r\ninterface DestinationRate {\r\n  name: string;\r\n  rates: Rate[];\r\n}\r\n\r\ninterface DestinationRates {\r\n  [key: string]: DestinationRate;\r\n}\r\n\r\ninterface AdditionalCharge {\r\n  name: string;\r\n  amount: number;\r\n}\r\n\r\ninterface Charges {\r\n  delivery: {\r\n    required: boolean;\r\n    vehicle: '4wheel' | '6wheel' | '';\r\n    rates: {\r\n      '4wheel': number;\r\n      '6wheel': number;\r\n    };\r\n  };\r\n  clearance: number;\r\n  additionalCharges: AdditionalCharge[];\r\n}\r\n\r\nexport default function ShippingCalculator() {\r\n  const [dimensions, setDimensions] = useState<Dimensions>({ length: 135, width: 110, height: 110 });\r\n  const [palletCount, setPalletCount] = useState<number>(3);\r\n  const [actualWeight, setActualWeight] = useState<number>(0);\r\n  const [selectedDestination, setSelectedDestination] = useState<string>('swiss');\r\n  const [showReport, setShowReport] = useState<boolean>(false);\r\n  const [companyInfo, setCompanyInfo] = useState({\r\n    companyName: '',\r\n    contactPerson: '',\r\n    contactNo: ''\r\n  });\r\n  const [charges, setCharges] = useState<Charges>({\r\n    delivery: {\r\n      required: false,\r\n      vehicle: '',\r\n      rates: {\r\n        '4wheel': 3500,\r\n        '6wheel': 6500\r\n      }\r\n    },\r\n    clearance: 5350,\r\n    additionalCharges: []\r\n  });\r\n\r\n  const reportRef = useRef<HTMLDivElement>(null);\r\n\r\n  const destinationRates: DestinationRates = {\r\n    swiss: {\r\n      name: \"Switzerland\",\r\n      rates: [\r\n        { minWeight: 1, maxWeight: 45, rate: 411 },\r\n        { minWeight: 46, maxWeight: 100, rate: 301 },\r\n        { minWeight: 101, maxWeight: 99999, rate: 271 }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const calculateVolumeWeight = () => {\r\n    const { length, width, height } = dimensions;\r\n    return Math.ceil((length * width * height) / 6000);\r\n  };\r\n\r\n  const getChargableWeight = () => {\r\n    const volumeWeight = calculateVolumeWeight() * palletCount;\r\n    const totalActualWeight = actualWeight * palletCount;\r\n    return Math.max(volumeWeight, totalActualWeight);\r\n  };\r\n\r\n  const getApplicableRate = (weight: number) => {\r\n    const rates = destinationRates[selectedDestination].rates;\r\n    const applicableRate = rates.find(\r\n      rate => weight >= rate.minWeight && weight <= rate.maxWeight\r\n    );\r\n    return applicableRate ? applicableRate.rate : rates[rates.length - 1].rate;\r\n  };\r\n\r\n  const calculateTotalCost = () => {\r\n    const chargableWeight = getChargableWeight();\r\n    const rate = getApplicableRate(chargableWeight);\r\n    const freightCost = rate * chargableWeight;\r\n    const deliveryCharge = charges.delivery.required && charges.delivery.vehicle ? \r\n      charges.delivery.rates[charges.delivery.vehicle] : 0;\r\n    const clearanceCharge = charges.clearance;\r\n    const totalAdditionalCharges = charges.additionalCharges.reduce((sum, charge) => sum + charge.amount, 0);\r\n    \r\n    return freightCost + deliveryCharge + clearanceCharge + totalAdditionalCharges;\r\n  };\r\n\r\n  const handleDownloadPDF = async () => {\r\n    if (reportRef.current) {\r\n      const html2pdf = (await import('html2pdf.js')).default;\r\n      const opt = {\r\n        margin: 0,\r\n        filename: `shipping-quote-${new Date().toISOString()}.pdf`,\r\n        image: { type: 'jpeg', quality: 0.98 },\r\n        html2canvas: { \r\n          scale: 2,\r\n          letterRendering: true,\r\n          useCORS: true\r\n        },\r\n        jsPDF: { \r\n          unit: 'mm', \r\n          format: 'a4', \r\n          orientation: 'portrait'\r\n        }\r\n      };\r\n      \r\n      html2pdf().set(opt).from(reportRef.current).save();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"w-full max-w-lg mx-auto\">\r\n        <CardHeader>\r\n          <CardTitle>Export Cost Calculator</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Company Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={companyInfo.companyName}\r\n                onChange={(e) => setCompanyInfo({ ...companyInfo, companyName: e.target.value })}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Contact Person</label>\r\n              <input\r\n                type=\"text\"\r\n                value={companyInfo.contactPerson}\r\n                onChange={(e) => setCompanyInfo({ ...companyInfo, contactPerson: e.target.value })}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Contact No</label>\r\n              <input\r\n                type=\"text\"\r\n                value={companyInfo.contactNo}\r\n                onChange={(e) => setCompanyInfo({ ...companyInfo, contactNo: e.target.value })}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Destination</label>\r\n            <select \r\n              value={selectedDestination}\r\n              onChange={(e) => setSelectedDestination(e.target.value)}\r\n              className=\"w-full p-2 border rounded\"\r\n            >\r\n              {Object.entries(destinationRates).map(([key, destination]) => (\r\n                <option key={key} value={key}>{destination.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Length (cm)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={dimensions.length}\r\n                onChange={(e) => setDimensions({ ...dimensions, length: parseFloat(e.target.value) || 0 })}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Width (cm)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={dimensions.width}\r\n                onChange={(e) => setDimensions({ ...dimensions, width: parseFloat(e.target.value) || 0 })}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Height (cm)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={dimensions.height}\r\n                onChange={(e) => setDimensions({ ...dimensions, height: parseFloat(e.target.value) || 0 })}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Actual Weight per Pallet (kg)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={actualWeight}\r\n                onChange={(e) => setActualWeight(parseFloat(e.target.value) || 0)}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Number of Pallets</label>\r\n              <input\r\n                type=\"number\"\r\n                value={palletCount}\r\n                onChange={(e) => setPalletCount(parseInt(e.target.value) || 0)}\r\n                className=\"w-full p-2 border rounded\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={charges.delivery.required}\r\n                  onChange={(e) => setCharges({\r\n                    ...charges,\r\n                    delivery: { ...charges.delivery, required: e.target.checked, vehicle: '' }\r\n                  })}\r\n                  className=\"rounded\"\r\n                />\r\n                <span className=\"text-sm font-medium\">Delivery Service Required</span>\r\n              </label>\r\n              {charges.delivery.required && (\r\n                <div className=\"mt-2\">\r\n                  <select\r\n                    value={charges.delivery.vehicle}\r\n                    onChange={(e) => setCharges({\r\n                      ...charges,\r\n                      delivery: { ...charges.delivery, vehicle: e.target.value as '4wheel' | '6wheel' }\r\n                    })}\r\n                    className=\"w-full p-2 border rounded\"\r\n                  >\r\n                    <option value=\"\">Select vehicle type</option>\r\n                    <option value=\"4wheel\">4 Wheels (฿3,000)</option>\r\n                    <option value=\"6wheel\">6 Wheels (฿4,500)</option>\r\n                  </select>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Clearance Charge (Include 7% VAT)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={charges.clearance}\r\n                disabled\r\n                className=\"w-full p-2 border rounded bg-gray-100\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Additional Charges</label>\r\n              <div className=\"space-y-2\">\r\n                {charges.additionalCharges.map((charge, index) => (\r\n                  <div key={index} className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={charge.name}\r\n                      onChange={(e) => {\r\n                        const newCharges = [...charges.additionalCharges];\r\n                        newCharges[index].name = e.target.value;\r\n                        setCharges({ ...charges, additionalCharges: newCharges });\r\n                      }}\r\n                      className=\"w-full p-2 border rounded\"\r\n                      placeholder=\"Charge Name\"\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      value={charge.amount}\r\n                      onChange={(e) => {\r\n                        const newCharges = [...charges.additionalCharges];\r\n                        newCharges[index].amount = parseFloat(e.target.value) || 0;\r\n                        setCharges({ ...charges, additionalCharges: newCharges });\r\n                      }}\r\n                      className=\"w-full p-2 border rounded\"\r\n                      placeholder=\"Amount\"\r\n                    />\r\n                    <button \r\n                      onClick={() => {\r\n                        const newCharges = charges.additionalCharges.filter((_, i) => i !== index);\r\n                        setCharges({ ...charges, additionalCharges: newCharges });\r\n                      }}\r\n                      className=\"px-2 py-1 text-red-600 hover:bg-red-50 rounded\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                <button \r\n                  onClick={() => setCharges({\r\n                    ...charges,\r\n                    additionalCharges: [...charges.additionalCharges, { name: '', amount: 0 }]\r\n                  })}\r\n                  className=\"text-blue-600 hover:text-blue-700\"\r\n                >\r\n                  + Add Charge\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Volume Weight per Pallet:</p>\r\n                <p className=\"text-xl font-bold\">{calculateVolumeWeight()} kg</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Total Volume Weight:</p>\r\n                <p className=\"text-xl font-bold\">{calculateVolumeWeight() * palletCount} kg</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Total Actual Weight:</p>\r\n                <p className=\"text-xl font-bold\">{actualWeight * palletCount} kg</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Chargeable Weight:</p>\r\n                <p className=\"text-xl font-bold\">{getChargableWeight()} kg</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Applied Rate:</p>\r\n                <p className=\"text-xl font-bold\">฿{getApplicableRate(getChargableWeight())}/kg</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium\">Total Cost:</p>\r\n                <p className=\"text-xl font-bold\">฿{calculateTotalCost().toLocaleString()}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => setShowReport(!showReport)}\r\n            className=\"w-full mt-4 px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n          >\r\n            {showReport ? 'Hide Report' : 'Generate Report'}\r\n          </button>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {showReport && (\r\n        <div>\r\n          <div ref={reportRef}>\r\n            <ReportLayout\r\n              data={{\r\n                dimensions,\r\n                palletCount,\r\n                actualWeight,\r\n                destination: destinationRates[selectedDestination].name,\r\n                volumeWeight: calculateVolumeWeight(),\r\n                totalVolumeWeight: calculateVolumeWeight() * palletCount,\r\n                totalActualWeight: actualWeight * palletCount,\r\n                chargeableWeight: getChargableWeight(),\r\n                appliedRate: getApplicableRate(getChargableWeight()),\r\n                totalCost: calculateTotalCost(),\r\n                rateStructure: destinationRates[selectedDestination].rates,\r\n                companyInfo,\r\n                charges\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: '-35px', display: 'flex', justifyContent: 'center' }} className=\"print:hidden\">\r\n            <button\r\n              onClick={handleDownloadPDF}\r\n              className=\"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n            >\r\n              Generate Quote\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AA6Ce,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;QAAE,QAAQ;QAAK,OAAO;QAAK,QAAQ;IAAI;IAChG,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAC7C,aAAa;QACb,eAAe;QACf,WAAW;IACb;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;QAC9C,UAAU;YACR,UAAU;YACV,SAAS;YACT,OAAO;gBACL,UAAU;gBACV,UAAU;YACZ;QACF;QACA,WAAW;QACX,mBAAmB,EAAE;IACvB;IAEA,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAEzC,MAAM,mBAAqC;QACzC,OAAO;YACL,MAAM;YACN,OAAO;gBACL;oBAAE,WAAW;oBAAG,WAAW;oBAAI,MAAM;gBAAI;gBACzC;oBAAE,WAAW;oBAAI,WAAW;oBAAK,MAAM;gBAAI;gBAC3C;oBAAE,WAAW;oBAAK,WAAW;oBAAO,MAAM;gBAAI;aAC/C;QACH;IACF;IAEA,MAAM,wBAAwB;QAC5B,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG;QAClC,OAAO,KAAK,IAAI,CAAC,AAAC,SAAS,QAAQ,SAAU;IAC/C;IAEA,MAAM,qBAAqB;QACzB,MAAM,eAAe,0BAA0B;QAC/C,MAAM,oBAAoB,eAAe;QACzC,OAAO,KAAK,GAAG,CAAC,cAAc;IAChC;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,QAAQ,gBAAgB,CAAC,oBAAoB,CAAC,KAAK;QACzD,MAAM,iBAAiB,MAAM,IAAI,CAC/B,CAAA,OAAQ,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS;QAE9D,OAAO,iBAAiB,eAAe,IAAI,GAAG,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,CAAC,IAAI;IAC5E;IAEA,MAAM,qBAAqB;QACzB,MAAM,kBAAkB;QACxB,MAAM,OAAO,kBAAkB;QAC/B,MAAM,cAAc,OAAO;QAC3B,MAAM,iBAAiB,QAAQ,QAAQ,CAAC,QAAQ,IAAI,QAAQ,QAAQ,CAAC,OAAO,GAC1E,QAAQ,QAAQ,CAAC,KAAK,CAAC,QAAQ,QAAQ,CAAC,OAAO,CAAC,GAAG;QACrD,MAAM,kBAAkB,QAAQ,SAAS;QACzC,MAAM,yBAAyB,QAAQ,iBAAiB,CAAC,MAAM,CAAC,CAAC,KAAK,SAAW,MAAM,OAAO,MAAM,EAAE;QAEtG,OAAO,cAAc,iBAAiB,kBAAkB;IAC1D;IAEA,MAAM,oBAAoB;QACxB,IAAI,UAAU,OAAO,EAAE;YACrB,MAAM,WAAW,CAAC,gJAA2B,EAAE,OAAO;YACtD,MAAM,MAAM;gBACV,QAAQ;gBACR,UAAU,CAAC,eAAe,EAAE,IAAI,OAAO,WAAW,GAAG,IAAI,CAAC;gBAC1D,OAAO;oBAAE,MAAM;oBAAQ,SAAS;gBAAK;gBACrC,aAAa;oBACX,OAAO;oBACP,iBAAiB;oBACjB,SAAS;gBACX;gBACA,OAAO;oBACL,MAAM;oBACN,QAAQ;oBACR,aAAa;gBACf;YACF;YAEA,WAAW,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,OAAO,EAAE,IAAI;QAClD;IACF;IAEA,qBACE,6LAAC;;0BACC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEb,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,YAAY,WAAW;gDAC9B,UAAU,CAAC,IAAM,eAAe;wDAAE,GAAG,WAAW;wDAAE,aAAa,EAAE,MAAM,CAAC,KAAK;oDAAC;gDAC9E,WAAU;;;;;;;;;;;;kDAGd,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,YAAY,aAAa;gDAChC,UAAU,CAAC,IAAM,eAAe;wDAAE,GAAG,WAAW;wDAAE,eAAe,EAAE,MAAM,CAAC,KAAK;oDAAC;gDAChF,WAAU;;;;;;;;;;;;kDAGd,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,YAAY,SAAS;gDAC5B,UAAU,CAAC,IAAM,eAAe;wDAAE,GAAG,WAAW;wDAAE,WAAW,EAAE,MAAM,CAAC,KAAK;oDAAC;gDAC5E,WAAU;;;;;;;;;;;;;;;;;;0CAKhB,6LAAC;;kDACC,6LAAC;wCAAM,WAAU;kDAAiC;;;;;;kDAClD,6LAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,uBAAuB,EAAE,MAAM,CAAC,KAAK;wCACtD,WAAU;kDAET,OAAO,OAAO,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,KAAK,YAAY,iBACvD,6LAAC;gDAAiB,OAAO;0DAAM,YAAY,IAAI;+CAAlC;;;;;;;;;;;;;;;;0CAKnB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,WAAW,MAAM;gDACxB,UAAU,CAAC,IAAM,cAAc;wDAAE,GAAG,UAAU;wDAAE,QAAQ,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oDAAE;gDACxF,WAAU;;;;;;;;;;;;kDAGd,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,WAAW,KAAK;gDACvB,UAAU,CAAC,IAAM,cAAc;wDAAE,GAAG,UAAU;wDAAE,OAAO,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oDAAE;gDACvF,WAAU;;;;;;;;;;;;kDAGd,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,WAAW,MAAM;gDACxB,UAAU,CAAC,IAAM,cAAc;wDAAE,GAAG,UAAU;wDAAE,QAAQ,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oDAAE;gDACxF,WAAU;;;;;;;;;;;;;;;;;;0CAKhB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO;gDACP,UAAU,CAAC,IAAM,gBAAgB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;gDAC/D,WAAU;;;;;;;;;;;;kDAGd,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO;gDACP,UAAU,CAAC,IAAM,eAAe,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;gDAC5D,WAAU;;;;;;;;;;;;;;;;;;0CAKhB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;;kEACf,6LAAC;wDACC,MAAK;wDACL,SAAS,QAAQ,QAAQ,CAAC,QAAQ;wDAClC,UAAU,CAAC,IAAM,WAAW;gEAC1B,GAAG,OAAO;gEACV,UAAU;oEAAE,GAAG,QAAQ,QAAQ;oEAAE,UAAU,EAAE,MAAM,CAAC,OAAO;oEAAE,SAAS;gEAAG;4DAC3E;wDACA,WAAU;;;;;;kEAEZ,6LAAC;wDAAK,WAAU;kEAAsB;;;;;;;;;;;;4CAEvC,QAAQ,QAAQ,CAAC,QAAQ,kBACxB,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC;oDACC,OAAO,QAAQ,QAAQ,CAAC,OAAO;oDAC/B,UAAU,CAAC,IAAM,WAAW;4DAC1B,GAAG,OAAO;4DACV,UAAU;gEAAE,GAAG,QAAQ,QAAQ;gEAAE,SAAS,EAAE,MAAM,CAAC,KAAK;4DAAwB;wDAClF;oDACA,WAAU;;sEAEV,6LAAC;4DAAO,OAAM;sEAAG;;;;;;sEACjB,6LAAC;4DAAO,OAAM;sEAAS;;;;;;sEACvB,6LAAC;4DAAO,OAAM;sEAAS;;;;;;;;;;;;;;;;;;;;;;;kDAM/B,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDACC,MAAK;gDACL,OAAO,QAAQ,SAAS;gDACxB,QAAQ;gDACR,WAAU;;;;;;;;;;;;kDAId,6LAAC;;0DACC,6LAAC;gDAAM,WAAU;0DAAiC;;;;;;0DAClD,6LAAC;gDAAI,WAAU;;oDACZ,QAAQ,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAQ,sBACtC,6LAAC;4DAAgB,WAAU;;8EACzB,6LAAC;oEACC,MAAK;oEACL,OAAO,OAAO,IAAI;oEAClB,UAAU,CAAC;wEACT,MAAM,aAAa;+EAAI,QAAQ,iBAAiB;yEAAC;wEACjD,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,MAAM,CAAC,KAAK;wEACvC,WAAW;4EAAE,GAAG,OAAO;4EAAE,mBAAmB;wEAAW;oEACzD;oEACA,WAAU;oEACV,aAAY;;;;;;8EAEd,6LAAC;oEACC,MAAK;oEACL,OAAO,OAAO,MAAM;oEACpB,UAAU,CAAC;wEACT,MAAM,aAAa;+EAAI,QAAQ,iBAAiB;yEAAC;wEACjD,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wEACzD,WAAW;4EAAE,GAAG,OAAO;4EAAE,mBAAmB;wEAAW;oEACzD;oEACA,WAAU;oEACV,aAAY;;;;;;8EAEd,6LAAC;oEACC,SAAS;wEACP,MAAM,aAAa,QAAQ,iBAAiB,CAAC,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;wEACpE,WAAW;4EAAE,GAAG,OAAO;4EAAE,mBAAmB;wEAAW;oEACzD;oEACA,WAAU;8EACX;;;;;;;2DA7BO;;;;;kEAkCZ,6LAAC;wDACC,SAAS,IAAM,WAAW;gEACxB,GAAG,OAAO;gEACV,mBAAmB;uEAAI,QAAQ,iBAAiB;oEAAE;wEAAE,MAAM;wEAAI,QAAQ;oEAAE;iEAAE;4DAC5E;wDACA,WAAU;kEACX;;;;;;;;;;;;;;;;;;;;;;;;0CAOP,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;8DACnC,6LAAC;oDAAE,WAAU;;wDAAqB;wDAAwB;;;;;;;;;;;;;sDAE5D,6LAAC;;8DACC,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;8DACnC,6LAAC;oDAAE,WAAU;;wDAAqB,0BAA0B;wDAAY;;;;;;;;;;;;;sDAE1E,6LAAC;;8DACC,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;8DACnC,6LAAC;oDAAE,WAAU;;wDAAqB,eAAe;wDAAY;;;;;;;;;;;;;sDAE/D,6LAAC;;8DACC,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;8DACnC,6LAAC;oDAAE,WAAU;;wDAAqB;wDAAqB;;;;;;;;;;;;;sDAEzD,6LAAC;;8DACC,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;8DACnC,6LAAC;oDAAE,WAAU;;wDAAoB;wDAAE,kBAAkB;wDAAsB;;;;;;;;;;;;;sDAE7E,6LAAC;;8DACC,6LAAC;oDAAE,WAAU;8DAAsB;;;;;;8DACnC,6LAAC;oDAAE,WAAU;;wDAAoB;wDAAE,qBAAqB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;0CAK5E,6LAAC;gCACC,SAAS,IAAM,cAAc,CAAC;gCAC9B,WAAU;0CAET,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;YAKnC,4BACC,6LAAC;;kCACC,6LAAC;wBAAI,KAAK;kCACR,cAAA,6LAAC,2JAAA,CAAA,UAAY;4BACX,MAAM;gCACJ;gCACA;gCACA;gCACA,aAAa,gBAAgB,CAAC,oBAAoB,CAAC,IAAI;gCACvD,cAAc;gCACd,mBAAmB,0BAA0B;gCAC7C,mBAAmB,eAAe;gCAClC,kBAAkB;gCAClB,aAAa,kBAAkB;gCAC/B,WAAW;gCACX,eAAe,gBAAgB,CAAC,oBAAoB,CAAC,KAAK;gCAC1D;gCACA;4BACF;;;;;;;;;;;kCAGJ,6LAAC;wBAAI,OAAO;4BAAE,WAAW;4BAAS,SAAS;4BAAQ,gBAAgB;wBAAS;wBAAG,WAAU;kCACvF,cAAA,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAQb;GApWwB;KAAA"}},
    {"offset": {"line": 1683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}